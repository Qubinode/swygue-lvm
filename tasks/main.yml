---
- name: ensure lvm2 is installed
  package:
    name: lvm2

- name: "checking if /dev/{{ host_device }} exist"
  parted: 
    device: /dev/{{ host_device }} 
    unit: MiB
  register: device_info

- name: check if /dev/{{ host_device }} has volume group
  shell: "pvs | awk '/{{ host_device }}/ {print $2}'"
  register: pvs_info

- name: check if logical volume exist
  shell: "lvs | grep {{ item.name }} | awk '{ print $1 }'"
  with_items: "{{ logical_volumes }}"
  register: lvs_info

- set_fact:
    create_vg: "{{ true if pvs_info.stdout == '' and pvs_info.stdout != vg_name else false }}"

- set_fact:
    current_vg: "{{ pvs_info.stdout if pvs_info.stdout != '' else 'no_vg' }}"

- fail:
    msg: |
        The device /dev/{{ host_device }} already has a volume group name {{ current_vg }}
        that does not match the given expected volume group name {{ vg_name }}
        either change the value of host_device or remove the volume group {{ current_vg }}
        Example:   
                   sudo vgremove {{ current_vg }} -ff -y
                   sudo pvremove /dev/{{ host_device }} -ff -y
  when: create_vg|bool

- name: list volume groups
  debug: 
    var: item
    verbosity: 2
  with_dict: "{{ ansible_lvm.vgs }}"
  
- name: Create Volume Group
  lvg:
    vg: "{{ vg_name }}"
    force: yes
    pvs: /dev/{{ host_device }}
  #register: create_vg
  when: create_vg|bool

- name: create custom logical volumes
  lvol:
    lv: "lv_{{ item.name }}"
    vg: "{{ vg_name }}"
    state: present
    size: "{{ item.size }}"
  with_items: "{{ logical_volumes }}"
  when: lvs_info is not defined

- name: Ensure filesystems are created
  filesystem:
    fstype: "{{ item.fstype }}"
    dev: "/dev/mapper/{{ vg_name }}-lv_{{ item.name }}"
    opts: "-L {{ item.name }}"
  with_items: "{{ logical_volumes }}"
  when: lvs_info is not defined

- name: Ensure mount points are created
  file:
    path: "{{ item.mount_dir }}"
    state: directory
  with_items: "{{ logical_volumes }}"
  when: lvs_info is not defined

- name: Config mount points in fstab
  mount:
    name: "{{ item.mount_dir }}"
    src: "LABEL={{ item.name }}"
    fstype: "{{ item.fstype }}"
    dump: 0
    passno: 0
    opts: defaults
    state: mounted
  with_items: "{{ logical_volumes }}"

- name: show device info
  debug:
    msg: "{{ item.name }}"
    verbosity: 1
  with_items: "{{ logical_volumes }}"

